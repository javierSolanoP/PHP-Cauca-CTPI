{"remainingRequest":"C:\\xampp\\htdocs\\plantilla\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\plantilla\\src\\components\\Inputs\\BaseInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\plantilla\\src\\components\\Inputs\\BaseInput.vue","mtime":1634347484563},{"path":"C:\\xampp\\htdocs\\plantilla\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\plantilla\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\plantilla\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\plantilla\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default{\n  inheritAttrs: false,\n  name: \"base-input\",\n  props:{\n    label: String,\n    value: [String, Number],\n    addonRightIcon: String,\n    addonLeftIcon: String\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data(){\n    return{\n      focused: false\n    }\n  },\n  computed:{\n    hasIcon(){\n      const{addonRight, addonLeft} = this.$slots;\n      return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined;\n    },\n    listeners(){\n      return {\n        ...this.$listeners,\n        input: this.onInput,\n        blur: this.onBlur,\n        focus: this.onFocus\n      }\n    }\n  },\n  methods:{\n    onInput(evt){\n      this.$emit('input', evt.target.value)\n    },\n    onFocus(){\n      this.focused = true;\n    },\n    onBlur(){\n      this.focused = false;\n    }\n  }\n}\n",{"version":3,"sources":["BaseInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseInput.vue","sourceRoot":"src/components/Inputs","sourcesContent":["<template>\r\n  <div class=\"form-group\"\r\n      :class=\"{\r\n        'input-group': hasIcon,\r\n        'input-group-focus': focused\r\n      }\">\r\n      <slot name=\"label\">\r\n        <label v-if=\"label\" class=\"control-label\">\r\n          {{ label }}\r\n        </label>\r\n      </slot>\r\n      <slot name=\"addonLeft\">\r\n        <span v-if=\"addonLeftIcon\" class=\"input-group-prepend\">\r\n          <div class=\"input-group-text\">\r\n            <i :class=\"addonLeftIcon\"></i>\r\n          </div>\r\n        </span>\r\n      </slot>\r\n      <slot>\r\n        <input\r\n            :value=\"value\"\r\n            v-bind=\"$attrs\"\r\n            v-on=\"listeners\"\r\n            class=\"form-control\"\r\n            aria-describedby=\"addon-right addon-left\">\r\n      </slot>\r\n      <slot name=\"addonRight\">\r\n        <span v-if=\"addonRightIcon\" class=\"input-group-append\">\r\n          <div class=\"input-group-text\">\r\n            <i :class=\"addonRightIcon\"></i>\r\n          </div>\r\n        </span>\r\n      </slot>\r\n      <slot name=\"helperText\"></slot>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default{\r\n    inheritAttrs: false,\r\n    name: \"base-input\",\r\n    props:{\r\n      label: String,\r\n      value: [String, Number],\r\n      addonRightIcon: String,\r\n      addonLeftIcon: String\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'input'\r\n    },\r\n    data(){\r\n      return{\r\n        focused: false\r\n      }\r\n    },\r\n    computed:{\r\n      hasIcon(){\r\n        const{addonRight, addonLeft} = this.$slots;\r\n        return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined;\r\n      },\r\n      listeners(){\r\n        return {\r\n          ...this.$listeners,\r\n          input: this.onInput,\r\n          blur: this.onBlur,\r\n          focus: this.onFocus\r\n        }\r\n      }\r\n    },\r\n    methods:{\r\n      onInput(evt){\r\n        this.$emit('input', evt.target.value)\r\n      },\r\n      onFocus(){\r\n        this.focused = true;\r\n      },\r\n      onBlur(){\r\n        this.focused = false;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n</style>\r\n"]}]}