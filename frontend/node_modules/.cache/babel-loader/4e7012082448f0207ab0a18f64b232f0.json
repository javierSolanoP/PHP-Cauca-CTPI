{"remainingRequest":"C:\\xampp\\htdocs\\plantilla\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\plantilla\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\plantilla\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\plantilla\\src\\components\\NotificationPlugin\\Notification.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\plantilla\\src\\components\\NotificationPlugin\\Notification.vue","mtime":1634347484563},{"path":"C:\\xampp\\htdocs\\plantilla\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\plantilla\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\plantilla\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\plantilla\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'notification',\n  components: {\n    contentRender: {\n      props: ['component'],\n      render: function render(h) {\n        return h(this.component);\n      }\n    }\n  },\n  props: {\n    message: String,\n    title: String,\n    icon: String,\n    verticalAlign: {\n      type: String,\n      default: 'top',\n      validator: function validator(value) {\n        var acceptedValues = ['top', 'bottom'];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    horizontalAlign: {\n      type: String,\n      default: 'right',\n      validator: function validator(value) {\n        var acceptedValues = ['left', 'center', 'right'];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    type: {\n      type: String,\n      default: 'info',\n      validator: function validator(value) {\n        var acceptedValues = ['info', 'primary', 'danger', 'warning', 'success'];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    timeout: {\n      type: Number,\n      default: 5000,\n      validator: function validator(value) {\n        return value >= 0;\n      }\n    },\n    timestamp: {\n      type: Date,\n      default: function _default() {\n        return new Date();\n      }\n    },\n    component: {\n      type: [Object, Function]\n    },\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    clickHandler: Function,\n    showClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    hasIcon: function hasIcon() {\n      return this.icon && this.icon.length > 0;\n    },\n    alertType: function alertType() {\n      return \"alert-\".concat(this.type);\n    },\n    customPosition: function customPosition() {\n      var _this = this;\n\n      var initialMargin = 20;\n      var alertHeight = this.elmHeight + 10;\n      var sameAlertsCount = this.$notifications.state.filter(function (alert) {\n        return alert.horizontalAlign === _this.horizontalAlign && alert.verticalAlign === _this.verticalAlign && alert.timestamp <= _this.timestamp;\n      }).length;\n\n      if (this.$notifications.settings.overlap) {\n        sameAlertsCount = 1;\n      }\n\n      var pixels = (sameAlertsCount - 1) * alertHeight + initialMargin;\n      var styles = {};\n\n      if (this.verticalAlign === 'top') {\n        styles.top = \"\".concat(pixels, \"px\");\n      } else {\n        styles.bottom = \"\".concat(pixels, \"px\");\n      }\n\n      return styles;\n    }\n  },\n  methods: {\n    close: function close() {\n      this.$emit('close', this.timestamp);\n    },\n    tryClose: function tryClose(evt) {\n      if (this.clickHandler) {\n        this.clickHandler(evt, this);\n      }\n\n      if (this.closeOnClick) {\n        this.close();\n      }\n    }\n  },\n  data: function data() {\n    return {\n      elmHeight: 0\n    };\n  },\n  mounted: function mounted() {\n    this.elmHeight = this.$el.clientHeight;\n\n    if (this.timeout) {\n      setTimeout(this.close, this.timeout);\n    }\n  }\n};",{"version":3,"sources":["Notification.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div @click=\"tryClose\"\r\n       data-notify=\"container\"\r\n       class=\"alert open\"\r\n       :class=\"[{'alert-with-icon': icon}, verticalAlign, horizontalAlign, alertType]\"\r\n       role=\"alert\"\r\n       :style=\"customPosition\">\r\n    <button\r\n        v-if=\"showClose\"\r\n        type=\"button\"\r\n        aria-hidden=\"true\"\r\n        class=\"close col-xs-1\"\r\n        data-notify=\"dismiss\"\r\n        @click=\"close\">\r\n        <i class=\"tim-icons icon-simple-remove\"></i>\r\n    </button>\r\n\r\n    <span v-if=\"icon\" data-notify=\"icon\" :class=\"['alert-icon', icon]\"></span>\r\n    <div data-notify=\"message\">\r\n      <div v-if=\"title\" class=\"title\"><b>{{title}}<br/></b></div>\r\n      <div v-if=\"message\" v-html=\"message\"></div>\r\n      <content-render v-if=\"!message && component\" :component=\"component\"></content-render>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  name: 'notification',\r\n  components: {\r\n    contentRender:{\r\n      props: ['component'],\r\n      render(h){\r\n        return h(this.component)\r\n      }\r\n    }\r\n  },\r\n  props:{\r\n    message: String,\r\n    title: String,\r\n    icon: String,\r\n    verticalAlign:{\r\n      type: String,\r\n      default: 'top',\r\n      validator: value => {\r\n        let acceptedValues = ['top', 'bottom'];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      }\r\n    },\r\n    horizontalAlign:{\r\n      type: String,\r\n      default: 'right',\r\n      validator: value => {\r\n        let acceptedValues = ['left','center','right'];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      }\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'info',\r\n      validator: value => {\r\n        let acceptedValues = [\r\n          'info',\r\n          'primary',\r\n          'danger',\r\n          'warning',\r\n          'success'\r\n        ];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      }\r\n    },\r\n    timeout: {\r\n      type: Number,\r\n      default: 5000,\r\n      validator: value => {\r\n        return value >= 0;\r\n      }\r\n    },\r\n    timestamp: {\r\n      type: Date,\r\n      default: () => new Date()\r\n    },\r\n    component: {\r\n      type: [Object, Function]\r\n    },\r\n    closeOnClick:{\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    clickHandler: Function,\r\n    showClose:{\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  computed:{\r\n    hasIcon() {\r\n      return this.icon && this.icon.length > 0;\r\n    },\r\n    alertType(){\r\n      return `alert-${this.type}`;\r\n    },\r\n    customPosition(){\r\n      let initialMargin = 20;\r\n      let alertHeight = this.elmHeight + 10;\r\n      let sameAlertsCount = this.$notifications.state.filter(alert => {\r\n        return (\r\n          alert.horizontalAlign === this.horizontalAlign &&\r\n          alert.verticalAlign === this.verticalAlign &&\r\n          alert.timestamp <= this.timestamp\r\n        );\r\n      }).length;\r\n      if (this.$notifications.settings.overlap) {\r\n        sameAlertsCount = 1;\r\n      }\r\n      let pixels = (sameAlertsCount - 1) * alertHeight + initialMargin;\r\n      let styles = {};\r\n      if (this.verticalAlign === 'top') {\r\n        styles.top = `${pixels}px`;\r\n      } else {\r\n        styles.bottom = `${pixels}px`;\r\n      }\r\n      return styles;\r\n    }\r\n  },\r\n  methods:{\r\n    close(){\r\n      this.$emit('close', this.timestamp);\r\n    },\r\n    tryClose(evt){\r\n      if(this.clickHandler){\r\n        this.clickHandler(evt,this);\r\n      }\r\n      if(this.closeOnClick){\r\n        this.close();\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      elmHeight: 0\r\n    };\r\n  },\r\n  mounted(){\r\n    this.elmHeight = this.$el.clientHeight;\r\n    if (this.timeout) {\r\n      setTimeout(this.close, this.timeout);\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.notifications .alert {\r\n  position: fixed;\r\n  z-index: 10000;\r\n  text-align: left;\r\n\r\n  &[data-notify='container'] {\r\n    width: 480px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &.center {\r\n    left: 0px;\r\n    right: 0px;\r\n    margin: 0 auto;\r\n  }\r\n  &.left {\r\n    left: 20px;\r\n  }\r\n  &.right {\r\n    right: 20px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/NotificationPlugin"}]}